server:
    port: 8082

spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
        
    
#uncomment for mysql 
#    datasource:
#        url: jdbc:mysql://localhost:3306/accountsdb
#        username: root
#        password: root
#    jpa: 
#        show-sql: true
#    sql:
#      init:
#        mode: always
#
#end of mysql

#for H2
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa: 
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
#
## end of H2

#uncomment to enable configserver
  config:
    import: "optional:configserver:http://localhost:8072/"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

#uncomment to enable rabbitmq
#    rabbitmq:
#      host: "localhost"
#      port: 5672
#      username: "guest"
#      password: "guest"
        
management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/
      
info:
  app:
    name: "accounts"
    description: "jayslabs accounts microservice"
    version: "1.0.1"
    
logging:
  level:
    jayslabs:
      microservicedemo:
        accounts: DEBUG
  pattern:
    level: "%5p [${spring.application.name}, %X{trace_id},%X{span_id}]"
    
       
resiliency4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
      
resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 4
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException
        
resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1
